# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import simulation_pb2 as simulation__pb2


class SimulationStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SpawnAgent = channel.unary_unary(
        '/pb.Simulation/SpawnAgent',
        request_serializer=simulation__pb2.SpawnAgentRequest.SerializeToString,
        response_deserializer=simulation__pb2.SpawnAgentResult.FromString,
        )
    self.AgentObservation = channel.unary_unary(
        '/pb.Simulation/AgentObservation',
        request_serializer=simulation__pb2.AgentObservationRequest.SerializeToString,
        response_deserializer=simulation__pb2.AgentObservationResult.FromString,
        )
    self.AgentAction = channel.unary_unary(
        '/pb.Simulation/AgentAction',
        request_serializer=simulation__pb2.AgentActionRequest.SerializeToString,
        response_deserializer=simulation__pb2.AgentActionResult.FromString,
        )
    self.ResetWorld = channel.unary_unary(
        '/pb.Simulation/ResetWorld',
        request_serializer=simulation__pb2.ResetWorldRequest.SerializeToString,
        response_deserializer=simulation__pb2.ResetWorldResult.FromString,
        )
    self.Spectate = channel.unary_stream(
        '/pb.Simulation/Spectate',
        request_serializer=simulation__pb2.SpectateRequest.SerializeToString,
        response_deserializer=simulation__pb2.CellUpdate.FromString,
        )


class SimulationServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SpawnAgent(self, request, context):
    """--- DEV ONLY ---
    Spawn a new agent
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AgentObservation(self, request, context):
    """Request observation data from an agent
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AgentAction(self, request, context):
    """Perform an action on behalf of an agent
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetWorld(self, request, context):
    """Perform an action on behalf of an agent
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Spectate(self, request, context):
    """--- END DEV ---

    Spectate simulation
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimulationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SpawnAgent': grpc.unary_unary_rpc_method_handler(
          servicer.SpawnAgent,
          request_deserializer=simulation__pb2.SpawnAgentRequest.FromString,
          response_serializer=simulation__pb2.SpawnAgentResult.SerializeToString,
      ),
      'AgentObservation': grpc.unary_unary_rpc_method_handler(
          servicer.AgentObservation,
          request_deserializer=simulation__pb2.AgentObservationRequest.FromString,
          response_serializer=simulation__pb2.AgentObservationResult.SerializeToString,
      ),
      'AgentAction': grpc.unary_unary_rpc_method_handler(
          servicer.AgentAction,
          request_deserializer=simulation__pb2.AgentActionRequest.FromString,
          response_serializer=simulation__pb2.AgentActionResult.SerializeToString,
      ),
      'ResetWorld': grpc.unary_unary_rpc_method_handler(
          servicer.ResetWorld,
          request_deserializer=simulation__pb2.ResetWorldRequest.FromString,
          response_serializer=simulation__pb2.ResetWorldResult.SerializeToString,
      ),
      'Spectate': grpc.unary_stream_rpc_method_handler(
          servicer.Spectate,
          request_deserializer=simulation__pb2.SpectateRequest.FromString,
          response_serializer=simulation__pb2.CellUpdate.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Simulation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
